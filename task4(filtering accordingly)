(async function () {
  const wait = (ms) => new Promise(res => setTimeout(res, ms));

  const clickLabelByText = async (text) => {
    const label = [...document.querySelectorAll('label')].find(el =>
      el.textContent.trim().toLowerCase().includes(text.toLowerCase())
    );
    if (label) {
      label.scrollIntoView({ behavior: "smooth", block: "center" });
      label.click();
      console.log(`‚úÖ Selected: ${text}`);
      await wait(1000);
    } else {
      console.warn(`‚ùå Not found: ${text}`);
    }
  };

  const clickButtonByText = async (text) => {
    const button = [...document.querySelectorAll('button')].find(el =>
      el.textContent.trim().toLowerCase() === text.toLowerCase()
    );
    if (button) {
      button.scrollIntoView({ behavior: "smooth", block: "center" });
      button.click();
      console.log(`üéØ Clicked: ${text}`);
    } else {
      console.warn(`‚ùå Button not found: ${text}`);
    }
  };

  // Step 1: Click "All filters"
  const allFiltersBtn = [...document.querySelectorAll('button')].find(btn =>
    btn.innerText.includes("All filters") || btn.getAttribute("aria-label")?.includes("All filters")
  );
  if (allFiltersBtn) {
    allFiltersBtn.click();
    console.log("üëâ Opened: All filters");
    await wait(1500);
  } else {
    console.warn("‚ùå All filters button not found");
    return;
  }

  // Step 2: Apply filters
  await clickLabelByText("Latest");               // Sort by: Latest
  await clickLabelByText("Past month");           // Date posted (updated)
  await clickLabelByText("Images");               // Content type
  await clickLabelByText("People you follow");    // Posted by

  // Step 3: Click "Show results"
  await clickButtonByText("Show results");

})();
